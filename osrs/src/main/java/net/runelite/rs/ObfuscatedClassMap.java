package net.runelite.rs;

import java.util.HashMap;

public class ObfuscatedClassMap extends HashMap<String, String> {
    public static ObfuscatedClassMap INSTANCE = new ObfuscatedClassMap();
    static {
		INSTANCE.put("AABB", "jl");
		INSTANCE.put("AbstractArchive", "om");
		INSTANCE.put("AbstractByteArrayCopier", "nn");
		INSTANCE.put("AbstractFont", "pk");
		INSTANCE.put("AbstractRasterProvider", "ui");
		INSTANCE.put("AbstractSocket", "re");
		INSTANCE.put("AbstractSound", "cb");
		INSTANCE.put("AbstractUserComparator", "rv");
		INSTANCE.put("AbstractWorldMapData", "kv");
		INSTANCE.put("AbstractWorldMapIcon", "ll");
		INSTANCE.put("AccessFile", "to");
		INSTANCE.put("Actor", "di");
		INSTANCE.put("AddRequestTask", "pi");
		INSTANCE.put("Animation", "ji");
		INSTANCE.put("ApproximateRouteStrategy", "cs");
		INSTANCE.put("Archive", "ok");
		INSTANCE.put("ArchiveDisk", "rw");
		INSTANCE.put("ArchiveDiskAction", "oe");
		INSTANCE.put("ArchiveDiskActionHandler", "ob");
		INSTANCE.put("ArchiveLoader", "dn");
		INSTANCE.put("AttackOption", "em");
		INSTANCE.put("AudioFilter", "cq");
		INSTANCE.put("BoundaryObject", "kr");
		INSTANCE.put("Bounds", "rx");
		INSTANCE.put("Buddy", "ri");
		INSTANCE.put("BuddyRankComparator", "eu");
		INSTANCE.put("Buffer", "ul");
		INSTANCE.put("BufferedFile", "tl");
		INSTANCE.put("BufferedNetSocket", "rc");
		INSTANCE.put("BufferedSink", "net/runelite/rs");
		INSTANCE.put("BufferedSource", "rj");
		INSTANCE.put("ByteArrayPool", "qo");
		INSTANCE.put("BZip2Decompressor", "ur");
		INSTANCE.put("BZip2State", "uo");
		INSTANCE.put("Calendar", "na");
		INSTANCE.put("Canvas", "at");
		INSTANCE.put("ChatChannel", "dg");
		INSTANCE.put("ClanChannel", "gb");
		INSTANCE.put("ClanChannelMember", "fv");
		INSTANCE.put("ClanMate", "rm");
		INSTANCE.put("ClanSettings", "gi");
		INSTANCE.put("class0", "ac");
		INSTANCE.put("class1", "al");
		INSTANCE.put("class10", "ag");
		INSTANCE.put("class103", "da");
		INSTANCE.put("class104", "eo");
		INSTANCE.put("class107", "ec");
		INSTANCE.put("class108", "eg");
		INSTANCE.put("class11", "aa");
		INSTANCE.put("class110", "ex");
		INSTANCE.put("class115", "es");
		INSTANCE.put("class12", "ap");
		INSTANCE.put("class126", "ep");
		INSTANCE.put("class127", "ef");
		INSTANCE.put("class128", "ew");
		INSTANCE.put("class129", "ed");
		INSTANCE.put("class13", "ay");
		INSTANCE.put("class130", "fj");
		INSTANCE.put("class131", "fh");
		INSTANCE.put("class132", "fz");
		INSTANCE.put("class133", "fs");
		INSTANCE.put("class134", "fl");
		INSTANCE.put("class135", "fe");
		INSTANCE.put("class136", "fo");
		INSTANCE.put("class138", "fi");
		INSTANCE.put("class139", "fk");
		INSTANCE.put("class14", "as");
		INSTANCE.put("class140", "fy");
		INSTANCE.put("class141", "fn");
		INSTANCE.put("class142", "fb");
		INSTANCE.put("class143", "ft");
		INSTANCE.put("class144", "fa");
		INSTANCE.put("class145", "fg");
		INSTANCE.put("class146", "fm");
		INSTANCE.put("class148", "ff");
		INSTANCE.put("class149", "fw");
		INSTANCE.put("class15", "aj");
		INSTANCE.put("class150", "fc");
		INSTANCE.put("class151", "fr");
		INSTANCE.put("class152", "fq");
		INSTANCE.put("class153", "fp");
		INSTANCE.put("class154", "fu");
		INSTANCE.put("class155", "fx");
		INSTANCE.put("class157", "ge");
		INSTANCE.put("class158", "gj");
		INSTANCE.put("class159", "gl");
		INSTANCE.put("class16", "an");
		INSTANCE.put("class160", "gq");
		INSTANCE.put("class161", "gt");
		INSTANCE.put("class162", "gf");
		INSTANCE.put("class163", "gk");
		INSTANCE.put("class164", "gm");
		INSTANCE.put("class166", "gx");
		INSTANCE.put("class167", "gp");
		INSTANCE.put("class168", "gd");
		INSTANCE.put("class169", "gz");
		INSTANCE.put("class17", "au");
		INSTANCE.put("class171", "gn");
		INSTANCE.put("class172", "gr");
		INSTANCE.put("class174", "gs");
		INSTANCE.put("class176", "gc");
		INSTANCE.put("class178", "gh");
		INSTANCE.put("class179", "gg");
		INSTANCE.put("class18", "ai");
		INSTANCE.put("class180", "gu");
		INSTANCE.put("class183", "hf");
		INSTANCE.put("class186", "hl");
		INSTANCE.put("class188", "hd");
		INSTANCE.put("class189", "hs");
		INSTANCE.put("class19", "ae");
		INSTANCE.put("class190", "hk");
		INSTANCE.put("class191", "hn");
		INSTANCE.put("class193", "hh");
		INSTANCE.put("class198", "hc");
		INSTANCE.put("class199", "hv");
		INSTANCE.put("class2", "ak");
		INSTANCE.put("class20", "aw");
		INSTANCE.put("class201", "hq");
		INSTANCE.put("class202", "hx");
		INSTANCE.put("class206", "ho");
		INSTANCE.put("class208", "iv");
		INSTANCE.put("class209", "ik");
		INSTANCE.put("class212", "in");
		INSTANCE.put("class214", "im");
		INSTANCE.put("class216", "iu");
		INSTANCE.put("class223", "ij");
		INSTANCE.put("class224", "ib");
		INSTANCE.put("class225", "il");
		INSTANCE.put("class226", "it");
		INSTANCE.put("class228", "ic");
		INSTANCE.put("class230", "ig");
		INSTANCE.put("class232", "ia");
		INSTANCE.put("class233", "id");
		INSTANCE.put("class241", "jr");
		INSTANCE.put("class242", "jj");
		INSTANCE.put("class257", "jm");
		INSTANCE.put("class259", "jg");
		INSTANCE.put("class266", "ko");
		INSTANCE.put("class27", "bk");
		INSTANCE.put("class274", "ks");
		INSTANCE.put("class275", "kp");
		INSTANCE.put("class28", "by");
		INSTANCE.put("class284", "ku");
		INSTANCE.put("class285", "ki");
		INSTANCE.put("class286", "la");
		INSTANCE.put("class29", "bd");
		INSTANCE.put("class294", "lc");
		INSTANCE.put("class295", "lk");
		INSTANCE.put("class296", "lv");
		INSTANCE.put("class297", "lw");
		INSTANCE.put("class298", "lo");
		INSTANCE.put("class3", "ax");
		INSTANCE.put("class30", "be");
		INSTANCE.put("class304", "lp");
		INSTANCE.put("class305", "lt");
		INSTANCE.put("class306", "le");
		INSTANCE.put("class307", "lg");
		INSTANCE.put("class31", "bv");
		INSTANCE.put("class313", "ma");
		INSTANCE.put("class314", "mj");
		INSTANCE.put("class315", "mm");
		INSTANCE.put("class316", "mc");
		INSTANCE.put("class317", "mw");
		INSTANCE.put("class319", "mr");
		INSTANCE.put("class322", "mz");
		INSTANCE.put("class323", "mu");
		INSTANCE.put("class325", "mh");
		INSTANCE.put("class326", "ml");
		INSTANCE.put("class33", "bz");
		INSTANCE.put("class330", "me");
		INSTANCE.put("class332", "my");
		INSTANCE.put("class337", "mg");
		INSTANCE.put("class339", "nx");
		INSTANCE.put("class340", "nv");
		INSTANCE.put("class341", "nd");
		INSTANCE.put("class342", "no");
		INSTANCE.put("class344", "nz");
		INSTANCE.put("class345", "nb");
		INSTANCE.put("class347", "nc");
		INSTANCE.put("class349", "nk");
		INSTANCE.put("class353", "nw");
		INSTANCE.put("class354", "ny");
		INSTANCE.put("class357", "nj");
		INSTANCE.put("class358", "nr");
		INSTANCE.put("class359", "ne");
		INSTANCE.put("class36", "bp");
		INSTANCE.put("class360", "nq");
		INSTANCE.put("class363", "nf");
		INSTANCE.put("class364", "oh");
		INSTANCE.put("class365", "of");
		INSTANCE.put("class367", "os");
		INSTANCE.put("class372", "ou");
		INSTANCE.put("class379", "op");
		INSTANCE.put("class384", "ow");
		INSTANCE.put("class385", "oi");
		INSTANCE.put("class386", "on");
		INSTANCE.put("class387", "ot");
		INSTANCE.put("class398", "pw");
		INSTANCE.put("class399", "pv");
		INSTANCE.put("class4", "ao");
		INSTANCE.put("class400", "po");
		INSTANCE.put("class401", "pa");
		INSTANCE.put("class403", "px");
		INSTANCE.put("class405", "pd");
		INSTANCE.put("class406", "pm");
		INSTANCE.put("class407", "pn");
		INSTANCE.put("class409", "pp");
		INSTANCE.put("class410", "pb");
		INSTANCE.put("class411", "pe");
		INSTANCE.put("class413", "pr");
		INSTANCE.put("class416", "qi");
		INSTANCE.put("class418", "qw");
		INSTANCE.put("class423", "ql");
		INSTANCE.put("class424", "qn");
		INSTANCE.put("class425", "qj");
		INSTANCE.put("class427", "qt");
		INSTANCE.put("class429", "qr");
		INSTANCE.put("class430", "qh");
		INSTANCE.put("class432", "qy");
		INSTANCE.put("class433", "qf");
		INSTANCE.put("class434", "qv");
		INSTANCE.put("class435", "qa");
		INSTANCE.put("class436", "qs");
		INSTANCE.put("class437", "qp");
		INSTANCE.put("class438", "qe");
		INSTANCE.put("class439", "qd");
		INSTANCE.put("class46", "bg");
		INSTANCE.put("class462", "rf");
		INSTANCE.put("class463", "ro");
		INSTANCE.put("class464", "rd");
		INSTANCE.put("class465", "rb");
		INSTANCE.put("class466", "rz");
		INSTANCE.put("class467", "rg");
		INSTANCE.put("class468", "sz");
		INSTANCE.put("class469", "sr");
		INSTANCE.put("class47", "bj");
		INSTANCE.put("class470", "sm");
		INSTANCE.put("class471", "sw");
		INSTANCE.put("class472", "sl");
		INSTANCE.put("class473", "su");
		INSTANCE.put("class474", "sh");
		INSTANCE.put("class475", "st");
		INSTANCE.put("class476", "sd");
		INSTANCE.put("class477", "si");
		INSTANCE.put("class478", "sq");
		INSTANCE.put("class479", "sy");
		INSTANCE.put("class480", "sf");
		INSTANCE.put("class481", "sa");
		INSTANCE.put("class490", "sk");
		INSTANCE.put("class491", "so");
		INSTANCE.put("class492", "sc");
		INSTANCE.put("class493", "sp");
		INSTANCE.put("class494", "th");
		INSTANCE.put("class495", "ti");
		INSTANCE.put("class5", "ah");
		INSTANCE.put("class500", "tw");
		INSTANCE.put("class504", "ts");
		INSTANCE.put("class505", "ty");
		INSTANCE.put("class508", "tv");
		INSTANCE.put("class51", "bw");
		INSTANCE.put("class511", "tn");
		INSTANCE.put("class512", "tx");
		INSTANCE.put("class513", "td");
		INSTANCE.put("class514", "tg");
		INSTANCE.put("class515", "tk");
		INSTANCE.put("class516", "tq");
		INSTANCE.put("class517", "tr");
		INSTANCE.put("class518", "tz");
		INSTANCE.put("class519", "tj");
		INSTANCE.put("class521", "uq");
		INSTANCE.put("class523", "uu");
		INSTANCE.put("class525", "um");
		INSTANCE.put("class53", "cu");
		INSTANCE.put("class530", "up");
		INSTANCE.put("class533", "uk");
		INSTANCE.put("class534", "uh");
		INSTANCE.put("class537", "uv");
		INSTANCE.put("class538", "ut");
		INSTANCE.put("class541", "uf");
		INSTANCE.put("class544", "ue");
		INSTANCE.put("class547", "vz");
		INSTANCE.put("class553", "vj");
		INSTANCE.put("class59", "cy");
		INSTANCE.put("class6", "ar");
		INSTANCE.put("class60", "cz");
		INSTANCE.put("class64", "ck");
		INSTANCE.put("class7", "ab");
		INSTANCE.put("class73", "cd");
		INSTANCE.put("class74", "ct");
		INSTANCE.put("class76", "cl");
		INSTANCE.put("class8", "am");
		INSTANCE.put("class87", "df");
		INSTANCE.put("class9", "av");
		INSTANCE.put("class91", "do");
		INSTANCE.put("class92", "dh");
		INSTANCE.put("class94", "du");
		INSTANCE.put("class95", "dr");
		INSTANCE.put("Client", "client");
		INSTANCE.put("ClientPacket", "ln");
		INSTANCE.put("ClientPreferences", "dy");
		INSTANCE.put("Clips", "jb");
		INSTANCE.put("Clock", "hu");
		INSTANCE.put("CollisionMap", "ih");
		INSTANCE.put("com/jagex/oldscape/pub/OtlTokenRequester", "com/jagex/oldscape/pub/OtlTokenRequester");
		INSTANCE.put("com/jagex/oldscape/pub/RefreshAccessTokenRequester", "com/jagex/oldscape/pub/RefreshAccessTokenRequester");
		INSTANCE.put("com/jagex/oldscape/pub/RefreshAccessTokenResponse", "com/jagex/oldscape/pub/RefreshAccessTokenResponse");
		INSTANCE.put("ConcurrentMidiTask", "qz");
		INSTANCE.put("Coord", "mo");
		INSTANCE.put("DbRowType", "ug");
		INSTANCE.put("DbTableType", "uz");
		INSTANCE.put("Decimator", "cg");
		INSTANCE.put("DefaultsGroup", "rh");
		INSTANCE.put("DelayFadeTask", "qb");
		INSTANCE.put("DemotingHashTable", "ls");
		INSTANCE.put("DesktopPlatformInfoProvider", "sn");
		INSTANCE.put("DevicePcmPlayer", "af");
		INSTANCE.put("DevicePcmPlayerProvider", "az");
		INSTANCE.put("DirectByteArrayCopier", "nh");
		INSTANCE.put("DirectWrapper", "lz");
		INSTANCE.put("DualNode", "sb");
		INSTANCE.put("DualNodeDeque", "pl");
		INSTANCE.put("DynamicObject", "dx");
		INSTANCE.put("EnumComposition", "ht");
		INSTANCE.put("EvictingDualNodeHashTable", "lr");
		INSTANCE.put("FaceNormal", "jv");
		INSTANCE.put("FadeInTask", "qg");
		INSTANCE.put("FadeOutTask", "qk");
		INSTANCE.put("FileSystem", "ga");
		INSTANCE.put("FloorDecoration", "jd");
		INSTANCE.put("FloorOverlayDefinition", "io");
		INSTANCE.put("FloorUnderlayDefinition", "ie");
		INSTANCE.put("Font", "pu");
		INSTANCE.put("FontName", "tc");
		INSTANCE.put("Fonts", "tt");
		INSTANCE.put("Frames", "ja");
		INSTANCE.put("Friend", "rq");
		INSTANCE.put("FriendLoginUpdate", "rr");
		INSTANCE.put("FriendsChat", "rl");
		INSTANCE.put("FriendsList", "rt");
		INSTANCE.put("FriendSystem", "ci");
		INSTANCE.put("GameBuild", "ng");
		INSTANCE.put("GameEngine", "bb");
		INSTANCE.put("GameObject", "kl");
		INSTANCE.put("GrandExchangeEvent", "od");
		INSTANCE.put("GrandExchangeEvents", "ox");
		INSTANCE.put("GrandExchangeOffer", "og");
		INSTANCE.put("GrandExchangeOfferAgeComparator", "oy");
		INSTANCE.put("GrandExchangeOfferNameComparator", "oz");
		INSTANCE.put("GrandExchangeOfferOwnWorldComparator", "cm");
		INSTANCE.put("GrandExchangeOfferTotalQuantityComparator", "oc");
		INSTANCE.put("GrandExchangeOfferUnitPriceComparator", "oj");
		INSTANCE.put("GrandExchangeOfferWorldComparator", "ov");
		INSTANCE.put("GraphicsDefaults", "ru");
		INSTANCE.put("GraphicsObject", "ch");
		INSTANCE.put("GZipDecompressor", "vb");
		INSTANCE.put("HealthBar", "db");
		INSTANCE.put("HealthBarDefinition", "hj");
		INSTANCE.put("HealthBarUpdate", "dt");
		INSTANCE.put("HitSplatDefinition", "iw");
		INSTANCE.put("HorizontalAlignment", "hb");
		INSTANCE.put("Huffman", "ns");
		INSTANCE.put("Ignored", "ry");
		INSTANCE.put("IgnoreList", "qu");
		INSTANCE.put("IndexedSprite", "un");
		INSTANCE.put("Instrument", "cp");
		INSTANCE.put("IntegerNode", "ss");
		INSTANCE.put("InterfaceParent", "de");
		INSTANCE.put("Interpreter", "cx");
		INSTANCE.put("IntHashTable", "vr");
		INSTANCE.put("InvDefinition", "hm");
		INSTANCE.put("IsaacCipher", "vd");
		INSTANCE.put("ItemComposition", "iy");
		INSTANCE.put("ItemContainer", "dk");
		INSTANCE.put("ItemLayer", "jc");
		INSTANCE.put("IterableDualNodeQueue", "pt");
		INSTANCE.put("IterableDualNodeQueueIterator", "ps");
		INSTANCE.put("IterableNodeDeque", "py");
		INSTANCE.put("IterableNodeDequeDescendingIterator", "pj");
		INSTANCE.put("IterableNodeHashTable", "tp");
		INSTANCE.put("IterableNodeHashTableIterator", "tm");
		INSTANCE.put("JagexCache", "gv");
		INSTANCE.put("JagNetThread", "oo");
		INSTANCE.put("JSException", "pq");
		INSTANCE.put("KeyHandler", "ad");
		INSTANCE.put("KitDefinition", "hz");
		INSTANCE.put("Language", "oa");
		INSTANCE.put("Link", "sg");
		INSTANCE.put("LinkDeque", "ph");
		INSTANCE.put("Login", "ca");
		INSTANCE.put("LoginPacket", "mi");
		INSTANCE.put("LoginScreenAnimation", "dd");
		INSTANCE.put("LoginType", "te");
		INSTANCE.put("LongNode", "se");
		INSTANCE.put("MenuAction", "cf");
		INSTANCE.put("Message", "cr");
		INSTANCE.put("Messages", "er");
		INSTANCE.put("MidiFileReader", "mf");
		INSTANCE.put("MidiPcmStream", "mt");
		INSTANCE.put("MilliClock", "go");
		INSTANCE.put("Model", "jn");
		INSTANCE.put("ModelData", "jw");
		INSTANCE.put("ModelData0", "km");
		INSTANCE.put("ModeWhere", "or");
		INSTANCE.put("MouseHandler", "bo");
		INSTANCE.put("MouseRecorder", "dp");
		INSTANCE.put("MouseWheelHandler", "aq");
		INSTANCE.put("MoveSpeed", "ip");
		INSTANCE.put("MusicPatch", "mq");
		INSTANCE.put("MusicPatchNode", "ms");
		INSTANCE.put("MusicPatchNode2", "mx");
		INSTANCE.put("MusicPatchPcmStream", "mn");
		INSTANCE.put("MusicSong", "mv");
		INSTANCE.put("MusicTrack", "mk");
		INSTANCE.put("NanoClock", "gy");
		INSTANCE.put("NewShit", "he");
		INSTANCE.put("Node", "sj");
		INSTANCE.put("NodeDeque", "pf");
		INSTANCE.put("NodeHashTable", "tf");
		INSTANCE.put("NPC", "dc");
		INSTANCE.put("NPCComposition", "hw");
		INSTANCE.put("ObjectComposition", "iz");
		INSTANCE.put("ObjectNode", "sv");
		INSTANCE.put("ObjectSound", "cj");
		INSTANCE.put("ObjTypeCustomisation", "hy");
		INSTANCE.put("Occluder", "je");
		INSTANCE.put("org/json/JSONArray", "org/json/JSONArray");
		INSTANCE.put("org/json/JSONException", "org/json/JSONException");
		INSTANCE.put("org/json/JSONObject", "org/json/JSONObject");
		INSTANCE.put("org/json/JSONString", "org/json/JSONString");
		INSTANCE.put("org/json/JSONTokener", "org/json/JSONTokener");
		INSTANCE.put("org/json/Null", "org/json/JSONObject$Null");
		INSTANCE.put("OtlTokenResponse", "com/jagex/oldscape/pub/OtlTokenResponse");
		INSTANCE.put("PacketBuffer", "uy");
		INSTANCE.put("PacketBufferNode", "lx");
		INSTANCE.put("PacketWriter", "ez");
		INSTANCE.put("ParamComposition", "ix");
		INSTANCE.put("PcmPlayer", "bu");
		INSTANCE.put("PcmStream", "bi");
		INSTANCE.put("PcmStreamMixer", "bm");
		INSTANCE.put("PcmStreamMixerListener", "cc");
		INSTANCE.put("PendingSpawn", "dw");
		INSTANCE.put("PlatformInfo", "sx");
		INSTANCE.put("Player", "dj");
		INSTANCE.put("PlayerComposition", "ni");
		INSTANCE.put("Players", "ei");
		INSTANCE.put("PlayerType", "ol");
		INSTANCE.put("PrivateChatMode", "va");
		INSTANCE.put("Projectile", "dv");
		INSTANCE.put("Rasterizer2D", "uc");
		INSTANCE.put("Rasterizer3D", "jx");
		INSTANCE.put("RasterProvider", "ba");
		INSTANCE.put("RawPcmStream", "bx");
		INSTANCE.put("RawSound", "bs");
		INSTANCE.put("ReflectionCheck", "bt");
		INSTANCE.put("Renderable", "jy");
		INSTANCE.put("RouteStrategy", "iq");
		INSTANCE.put("RunException", "ve");
		INSTANCE.put("Scene", "jt");
		INSTANCE.put("SceneTileModel", "jf");
		INSTANCE.put("SceneTilePaint", "jz");
		INSTANCE.put("Script", "ds");
		INSTANCE.put("ScriptEvent", "dl");
		INSTANCE.put("ScriptFrame", "cn");
		INSTANCE.put("SecureRandomCallable", "dz");
		INSTANCE.put("SecureRandomFuture", "dm");
		INSTANCE.put("SequenceDefinition", "if");
		INSTANCE.put("ServerPacket", "lu");
		INSTANCE.put("Skeleton", "ju");
		INSTANCE.put("Skills", "nu");
		INSTANCE.put("SoftWrapper", "ld");
		INSTANCE.put("SongTask", "qm");
		INSTANCE.put("SoundCache", "bl");
		INSTANCE.put("SoundEffect", "br");
		INSTANCE.put("SoundEnvelope", "bf");
		INSTANCE.put("SoundSystem", "bh");
		INSTANCE.put("SpotAnimation", "vk");
		INSTANCE.put("SpotAnimationDefinition", "ir");
		INSTANCE.put("SpriteMask", "mp");
		INSTANCE.put("SpritePixels", "ud");
		INSTANCE.put("Strings", "oq");
		INSTANCE.put("StructComposition", "ii");
		INSTANCE.put("StudioGame", "np");
		INSTANCE.put("SwapSongTask", "pz");
		INSTANCE.put("Task", "hi");
		INSTANCE.put("TaskHandler", "gw");
		INSTANCE.put("Texture", "jo");
		INSTANCE.put("TextureLoader", "kg");
		INSTANCE.put("TextureProvider", "jq");
		INSTANCE.put("Tile", "jh");
		INSTANCE.put("TileItem", "el");
		INSTANCE.put("Tiles", "dq");
		INSTANCE.put("Timer", "qq");
		INSTANCE.put("TriBool", "ra");
		INSTANCE.put("UrlRequest", "eq");
		INSTANCE.put("UrlRequester", "en");
		INSTANCE.put("User", "rp");
		INSTANCE.put("UserComparator1", "uw");
		INSTANCE.put("UserComparator10", "ea");
		INSTANCE.put("UserComparator2", "ux");
		INSTANCE.put("UserComparator3", "ev");
		INSTANCE.put("UserComparator4", "ej");
		INSTANCE.put("UserComparator5", "eb");
		INSTANCE.put("UserComparator6", "ey");
		INSTANCE.put("UserComparator7", "eh");
		INSTANCE.put("UserComparator8", "et");
		INSTANCE.put("UserComparator9", "ee");
		INSTANCE.put("UserList", "rn");
		INSTANCE.put("Username", "vf");
		INSTANCE.put("Usernamed", "qc");
		INSTANCE.put("VarbitComposition", "is");
		INSTANCE.put("VarcInt", "hg");
		INSTANCE.put("Varcs", "ek");
		INSTANCE.put("VarpDefinition", "ha");
		INSTANCE.put("Varps", "md");
		INSTANCE.put("VertexNormal", "jp");
		INSTANCE.put("VerticalAlignment", "hr");
		INSTANCE.put("ViewportMouse", "netscape/js");
		INSTANCE.put("VorbisCodebook", "ce");
		INSTANCE.put("VorbisFloor", "bc");
		INSTANCE.put("VorbisMapping", "bq");
		INSTANCE.put("VorbisSample", "cw");
		INSTANCE.put("WallDecoration", "kq");
		INSTANCE.put("Widget", "nm");
		INSTANCE.put("WidgetDefinition", "nt");
		INSTANCE.put("World", "cv");
		INSTANCE.put("WorldMap", "tu");
		INSTANCE.put("WorldMapArchiveLoader", "tb");
		INSTANCE.put("WorldMapArea", "kz");
		INSTANCE.put("WorldMapAreaData", "lj");
		INSTANCE.put("WorldMapCacheName", "lh");
		INSTANCE.put("WorldMapData_0", "kj");
		INSTANCE.put("WorldMapData_1", "kh");
		INSTANCE.put("WorldMapDecoration", "kt");
		INSTANCE.put("WorldMapDecorationType", "nl");
		INSTANCE.put("WorldMapElement", "hp");
		INSTANCE.put("WorldMapEvent", "li");
		INSTANCE.put("WorldMapIcon_0", "kf");
		INSTANCE.put("WorldMapIcon_1", "kb");
		INSTANCE.put("WorldMapLabel", "kd");
		INSTANCE.put("WorldMapLabelSize", "ka");
		INSTANCE.put("WorldMapManager", "kk");
		INSTANCE.put("WorldMapRectangle", "kx");
		INSTANCE.put("WorldMapRegion", "ke");
		INSTANCE.put("WorldMapScaleHandler", "lf");
		INSTANCE.put("WorldMapSection", "lm");
		INSTANCE.put("WorldMapSection0", "kw");
		INSTANCE.put("WorldMapSection1", "ly");
		INSTANCE.put("WorldMapSection2", "kn");
		INSTANCE.put("WorldMapSectionType", "ky");
		INSTANCE.put("WorldMapSprite", "kc");
		INSTANCE.put("Wrapper", "lb");
		INSTANCE.put("ZoneOperation", "lq");
    }
}