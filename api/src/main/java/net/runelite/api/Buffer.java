package net.runelite.api;

public interface Buffer extends Node
{


  byte[] getPayload();
  int getOffset();
  void setOffset(int offset);
  String readString();
	void writeByte$api(int p0); 
	void writeShort$api(int p0); 
	void writeMedium$api(int p0); 
	void writeInt$api(int p0); 
	void writeLongMedium$api(long p0); 
	void writeLong$api(long p0); 
	void writeBoolean$api(boolean p0); 
	void writeStringCp1252NullTerminated$api(String p0); 
	void writeStringCp1252NullCircumfixed$api(String p0); 
	void writeCESU8$api(CharSequence p0); 
	void writeBytes$api(byte[] p0, int p1, int p2); 
	void writeBuffer$api(Buffer p0); 
	void writeLengthInt$api(int p0); 
	void writeLengthShort$api(int p0); 
	void writeLengthByte$api(int p0); 
	void writeSmartByteShort$api(int p0); 
	void writeVarInt$api(int p0); 
	int readUnsignedByte$api();
	byte readByte$api();
	int readUnsignedShort$api();
	int readShort$api();
	int readMedium$api();
	int readInt$api();
	long readLong$api();
	boolean readBoolean$api();
	String readStringCp1252NullTerminatedOrNull$api();
	String readStringCp1252NullCircumfixed$api();
	String readCESUB$api();
	void readBytes$api(byte[] p0, int p1, int p2); 
	int readShortSmart$api();
	int readUShortSmart$api();
	int readShortSmartSub$api();
	int readIncrSmallSmart$api();
	int readLargeSmart$api();
	int readNullableLargeSmart$api();
	int readVarInt$api();
	int writeCrc$api(int p0); 
	void writeByteAdd$api(int p0); 
	void writeByteNeg$api(int p0); 
	void writeByteSub$api(int p0); 
	int readUnsignedByteAdd$api();
	int readUnsignedByteSub$api();
	int readUnsignedByteNeg$api();
	byte readByteAdd$api();
	byte readByteNeg$api();
	byte readByteSub$api();
	void writeShortAdd$api(int p0); 
	void writeShortAddLE$api(int p0); 
	void writeShortLE$api(int p0); 
	int readUnsignedShortLE$api();
	int readUnsignedShortAdd$api();
	int readUnsignedShortAddLE$api();
	int readShortLE$api();
	int readShortAdd$api();
	int readShortAddLE$api();
	void writeIntLE$api(int p0); 
	void writeIntME$api(int p0); 
	void writeIntIME$api(int p0); 
	int readIntME$api();
	int readUnsignedIntIME$api();
	int readUnsignedIntME$api();
}
